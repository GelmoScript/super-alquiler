@if (Modo != null)
{
    <EditForm Model="@Cliente">
        <div class="container">
            <div class="row">
                <div class="col">
                    <label>
                        Nombre
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="nombre" @bind-Value="Cliente.Nombre" />
                        }else
                        {
                            <InputText class="form-control" id="nombre" @bind-Value="Cliente.Nombre" />
                        }
                    </label>
                    <label>
                        Apellido
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="apellido" @bind-Value="Cliente.Apellido" />
                        }
                        else
                        {
                            <InputText class="form-control" id="apellido" @bind-Value="Cliente.Apellido" />
                        }
                    </label>
                    <label>
                        Cedula
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="cedula" @bind-Value="Cliente.Cedula" />
                        }
                        else
                        {
                            <InputText class="form-control" id="cedula" @bind-Value="Cliente.Cedula" />
                        }
                    </label>
                    <label>
                        Licencia
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="licencia" @bind-Value="Cliente.Licencia" />
                        }
                        else
                        {
                            <InputText class="form-control" id="licencia" @bind-Value="Cliente.Licencia" />
                        }
                    </label>
                    <label>
                        Nacionalidad
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="nacionalidad" @bind-Value="Cliente.Nacionalidad" />
                        }
                        else
                        {
                            <InputText class="form-control" id="nacionalidad" @bind-Value="Cliente.Nacionalidad" />
                        }
                    </label>
                </div>
                <div class="col">
                    <label>
                        Correo
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="correo" @bind-Value="Cliente.Correo" />
                        }
                        else
                        {
                            <InputText class="form-control" id="correo" @bind-Value="Cliente.Correo" />
                        }
                    </label>
                    <label>
                        Tipo de Sangre
                        @if (ModoEliminar)
                        {
                            <InputText class="form-control deshabilitado" id="tipo-de-sangre" @bind-Value="Cliente.TipoDeSangre" />
                        }
                        else
                        {
                            <InputText class="form-control" id="tipo-de-sangre" @bind-Value="Cliente.TipoDeSangre" />
                        }
                    </label>
                    <label>
                        Foto
                        @if (ModoEliminar)
                        {
                            <InputFile id="foto" @bind-Value="Cliente.Foto" />
                        }
                        else
                        {
                            <InputFile id="foto" @bind-Value="Cliente.Foto" />
                        }
                    </label>
                    <label>
                        Foto de Licencia
                        @if (ModoEliminar)
                        {
                            <InputFile  id="foto-licencia" @bind-Value="Cliente.FotoLicencia" />
                        }
                        else
                        {
                            <InputFile  id="foto-licencia" @bind-Value="Cliente.FotoLicencia" />
                        }
                    </label>
                    <div class="botones">

                        @switch (Modo)
                        {
                            case FormModes.Editar:
                                <button class="btn btn-outline-dark" @onclick="Editar" >Editar</button>
                                break;
                            case FormModes.Agregar:
                                <button class="btn btn-outline-dark" @onclick="Agregar" >Agregar</button>
                                break;
                            case FormModes.Eliminar:
                                <button class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                                break;
                            default:
                                break;
                        }
                        <button class="btn btn-outline-danger" @onclick="async () => { await Modo_Click(null); }">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}


@code {

    [Parameter]
    public Cliente Cliente { get; set; }

    protected bool ModoEliminar
    {
        get
        {
            return Modo == FormModes.Eliminar;
        }
    }

    [Parameter]
    public FormModes? Modo { get; set; }

    [Parameter]
    public EventCallback<FormModes?> ParaCambiarModo { get; set; }

    [Parameter]
    public EventCallback<FormModes?> CambioRealizado { get; set; }

    protected async Task Modo_Click(FormModes? modo)
    {
        await ParaCambiarModo.InvokeAsync(modo);
    }

    async Task Agregar()
    {
        CRUDClientes crudClientes = new CRUDClientes();
        crudClientes.Create(Cliente);
        await CambioRealizado.InvokeAsync();
    }
    async Task Editar()
    {
        CRUDClientes crudClientes = new CRUDClientes();
        crudClientes.Update(Cliente);
        await CambioRealizado.InvokeAsync();
    }
    async Task Eliminar()
    {
        CRUDClientes crudClientes = new CRUDClientes();
        crudClientes.Delete(Cliente.Id);
        await CambioRealizado.InvokeAsync();
    }
}
